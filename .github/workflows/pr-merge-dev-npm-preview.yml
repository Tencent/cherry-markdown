name: PR Merge Dev NPM Preview

on:
  pull_request_target:
    types:
      - closed

jobs:
  dev-deploy:
    # 不需要在fork仓库的pr中运行, 仅当pr合并时运行
    # if: github.repository == 'Tencent/cherry-markdown' && github.event.pull_request.merged == true
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      # 检出仓库代码
      - name: Checkout repository
        uses:
          actions/checkout@v4

          # 获取PR合并后的SHA
      - name: Get merge commit SHA
        run: |
          if [ "${{ github.event.pull_request.merged }}" == "true" ]; then
              SHORT_SHA=$(echo "${{ github.event.pull_request.merge_commit_sha }}" | cut -c1-7)
              echo "MERGE_COMMIT_SHA=$SHORT_SHA" >> "$GITHUB_ENV"
              echo "切割后的 SHA: $SHORT_SHA"
          else
            echo "Not a merged PR, skipping"
          fi

      # 根据commit id 修改package.json中的版本号和名称
      # jq '.name="@cherry-markdown/preview-dev"' package.json > temp.json && mv temp.json package.json
      - name: Update package version and name
        run: |
          if [ -f package.json ]; then
            # 打印 SHORT_SHA
            echo "SHORT_SHA=$SHORT_SHA"

             # 获取当前版本号并添加后缀
              VERSION=$(node -p "require('./package.json').version")-dev.$SHORT_SHA
              echo "version=$VERSION" >> "$GITHUB_ENV"

              # 修改 package.json 中的 name 和 version
              jq --arg version "$VERSION" '.name="test-cherry-markdown" | .version=$version' package.json > temp.json && mv temp.json package.json

              # 打印修改后的 name 和 version
              echo "Updated package.json:"
              cat package.json | jq '.name, .version'

             else
            echo "package.json 文件不存在"
          fi

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: yarn install
        run: npm i -g yarn && yarn install

      - name: build
        run: yarn build

      - name: npm publish
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
