name: PR Merge Client Dev Preview

on:
  pull_request_target:
    types: [closed]
    paths: 
      - "packages/client/**"

permissions:
  contents: read
  pull-requests: write
  actions: read

jobs:
 client-preview:
    # 不需要在fork仓库的pr中运行, 仅当pr合并时运行
    if: github.repository == 'Tencent/cherry-markdown' && github.event.pull_request.merged == true
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: macos-latest
            target: aarch64-apple-darwin
            args: "--target aarch64-apple-darwin"
            path_patterns: |
              ./packages/clientsrc-tauri/target/**/release/bundle/dmg/*.dmg
              ./packages/clientsrc-tauri/target/**/release/bundle/macos/*.app
          - platform: macos-latest
            target: x86_64-apple-darwin
            args: "--target x86_64-apple-darwin"
            path_patterns: |
              ./packages/clientsrc-tauri/target/**/release/bundle/dmg/*.dmg
              ./packages/clientsrc-tauri/target/**/release/bundle/macos/*.app
          - platform: windows-latest
            path_patterns: |
              ./packages/client/src-tauri/target/**/release/bundle/msi/*.msi
              ./packages/client/src-tauri/target/**/release/bundle/nsis/*.exe
          - platform: ubuntu-latest
            path_patterns: |
              ./packages/client/src-tauri/target/**/release/bundle/appimage/*.AppImage
              ./packages/client/src-tauri/target/**/release/bundle/deb/*.deb

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          target: ${{ matrix.target }}
          toolchain: stable

      - name: Ensure x86_64 Target is Installed
        if: matrix.target == 'x86_64-apple-darwin'
        run: rustup target add x86_64-apple-darwin

      - name: Install Linux Dependencies
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Build Tauri
        run: |
          yarn --network-timeout 100000
          yarn build
          yarn build:client ${{ matrix.args }}

      - name: Upload Files
        id: upload-artifact
        uses: actions/upload-artifact@v4
        with:
          name: cherry-markdown_client_${{ matrix.platform }}
          path: ${{ matrix.path_patterns }}
      - name: Artifact Commit
        run: |
          echo "Artifact URL: ${{ steps.upload-artifact.outputs.artifact-url }}"

      - name: Extract package info
        id: extract-package
        run: |
          $name = node -p "require('./packages/client/package.json').name"
          $version = node -p "require('./packages/client/package.json').version"
          "name=$name" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
          "version=$version" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
        shell: pwsh

      - name: Post Artifact URL to PR
        uses: actions/github-script@v6
        env:
          ARTIFACT_URL: ${{ steps.upload-artifact.outputs.artifact-url }}
          NAME: ${{ steps.extract-package.outputs.name }}
          VERSION: ${{ steps.extract-package.outputs.version }}
          PLATFORM: ${{ matrix.platform }}  
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `📦 预览 (Preview) [${process.env.NAME}_${process.env.PLATFORM}@${process.env.VERSION}](${process.env.ARTIFACT_URL})`
            });