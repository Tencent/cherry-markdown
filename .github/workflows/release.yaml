name: Release

on:
  push:
    branches:
      - main

jobs:
  release:
    # 不需要在fork仓库的pr中运行, 仅当pr合并时运行
    if: github.repository == 'Tencent/cherry-markdown'
    runs-on: ubuntu-latest
    outputs:
      publishedPackages: ${{ steps.changesets.outputs.publishedPackages }}
      publishedClientVersion: ${{ steps.extract_version.outputs.clientVersion }}
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          yarn

      - name: Check for changesets
        id: changesets
        uses: changesets/action@v1
        with:
          version: yarn changeset-version
          title: "chore: release"
          commit: "chore: release"
          publish: yarn changeset tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Version Output
        id: extract_version
        run: |
          echo "publishedPackages: ${{ steps.changesets.outputs.publishedPackages }}"

          clientVersion=$(echo '${{ steps.changesets.outputs.publishedPackages }}' | jq -r '.[] | select(.name=="@cherry-markdown/client") | .version')
          echo "clientVersion=$clientVersion" >> $GITHUB_OUTPUT
 
  build-core-release:
    needs: release
    if: ${{ contains(needs.release.outputs.publishedPackages, '"name":"cherry-markdown"') }}
    uses: ./.github/workflows/release-cherry-markdown-build.yaml

  build-client-release:
    needs: release
    if: ${{ contains(needs.release.outputs.publishedPackages, '"name":"@cherry-markdown/client"') }}
    uses: ./.github/workflows/release-client-build.yaml
    with:
      client_version: ${{ needs.release.outputs.publishedClientVersion }}

  build-vscodePlugin-release:
    needs: release
    if: ${{ contains(needs.release.outputs.publishedPackages, '"name":"cherry-markdown-vscode-plugin"') }}
    uses: ./.github/workflows/release-vscode-plugin-build.yaml
